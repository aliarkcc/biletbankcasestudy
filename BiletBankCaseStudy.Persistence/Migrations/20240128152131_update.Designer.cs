// <auto-generated />
using System;
using BiletBankCaseStudy.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiletBankCaseStudy.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240128152131_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.AirlineCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AirlineCompany", (string)null);
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.Airport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IATA_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LATITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LONGITUDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Airport", (string)null);
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirlineCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArrivalAirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartureAirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirlineCompanyId");

                    b.HasIndex("ArrivalAirportId");

                    b.HasIndex("DepartureAirportId");

                    b.ToTable("Flight", (string)null);
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.FlightPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LuggageWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("PriceType")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightPrice", (string)null);
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.Flight", b =>
                {
                    b.HasOne("BiletBankCaseStudy.Domain.Entities.AirlineCompany", "AirlineCompany")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BiletBankCaseStudy.Domain.Entities.Airport", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("ArrivalAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiletBankCaseStudy.Domain.Entities.Airport", "DepartureAirport")
                        .WithMany("Flights")
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AirlineCompany");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.FlightPrice", b =>
                {
                    b.HasOne("BiletBankCaseStudy.Domain.Entities.Flight", "Flight")
                        .WithMany("FlightPrices")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.AirlineCompany", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.Airport", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("BiletBankCaseStudy.Domain.Entities.Flight", b =>
                {
                    b.Navigation("FlightPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
